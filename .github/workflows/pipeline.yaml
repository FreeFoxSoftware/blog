name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
permissions:
  id-token: write
  contents: write
  checks: write
  issues: read
  pull-requests: write
  actions: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed for gitversion
     
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          workload_identity_provider: 'projects/362975807929/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github-service@scott-walker-engineering.iam.gserviceaccount.com'
          create_credentials_file: true
          token_format: access_token
        
      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: europe-west4-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: europe-west4-docker.pkg.dev/scott-walker-engineering/applications/blog
          tags: |
            type=raw,value=${{ env.GitVersion_SemVer }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            
      - name: Test container
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push helm chart
        run: |
          HELM_PATH=./charts/blog
          CHART_NAME=blog
          CHART_FILE=$CHART_NAME-${{ env.GitVersion_SemVer }}.tgz
          echo "Package chart $CHART_NAME at $HELM_PATH"
          cd $HELM_PATH
          yq -i '.version="${{ env.GitVersion_SemVer }}"' ./Chart.yaml
          yq -i '.image.tag="${{ env.GitVersion_SemVer }}"' ./values.yaml
          helm package .
          helm push $CHART_FILE oci://europe-west4-docker.pkg.dev/scott-walker-engineering/charts

      - name: Create Tag
        if: github.ref_name == 'main'
        uses: negz/create-tag@v1
        with:
          version: ${{ env.GitVersion_SemVer }}
          message: 'Auto tagging version ${{ env.GitVersion_SemVer }}'
          token: ${{ secrets.GITHUB_TOKEN }}